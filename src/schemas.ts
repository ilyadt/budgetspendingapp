/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/budgets/spendings": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Получение трат по всем бюджетам
         * @description Получение трат по всем бюджетам
         */
        get: operations["getBudgetsWithSpendings"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/budgets/spendings/bulk": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Обновление расходов по бюджету
         * @description Обновление расходов по бюджету
         */
        post: operations["updateBudgetSpendings"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        Budget: {
            id: number;
            /** @description Для отображения внизу под вкладками */
            alias: string;
            /** @description полное название бюджета */
            name: string;
            /**
             * Format: uint64
             * @description сортировка бюджетов
             */
            sort: number;
            /** @description описание назначения бюджета, какие-то комментарии */
            description?: string;
            money: components["schemas"]["Money"];
            /** Format: date */
            dateFrom: string;
            /** Format: date */
            dateTo: string;
            /** @description json формат дополнительных параметров для отображения */
            params: {
                [key: string]: unknown;
            };
        };
        Money: {
            /** Format: int64 */
            amount: number;
            fraction: number;
            currency: string;
        };
        Spending: {
            id: string;
            /** Format: date */
            date: string;
            /** Format: uint64 */
            sort: number;
            money: components["schemas"]["Money"];
            description: string;
            /** Format: date-time */
            createdAt: string;
            /** Format: date-time */
            updatedAt: string;
            /**
             * @description версионирование изменений записи (во избежания перетирания чужих изменений)
             * @example 039dhafc
             */
            version: string;
        };
        SpendingsByBudget: {
            budgetId: number;
            spendings: components["schemas"]["Spending"][];
        };
        BudgetsWithSpendingsResponse: {
            budgets: components["schemas"]["Budget"][];
            spendings: components["schemas"]["SpendingsByBudget"][];
        };
        UpdateSpendingsBulkRequest: {
            updates: (components["schemas"]["SpendingCreateEvent"] | components["schemas"]["SpendingUpdateEvent"] | components["schemas"]["SpendingDeleteEvent"])[];
        };
        UpdateSpendingsErrorsResponse: {
            /** @description общая ошибка в запросе */
            generalError?: string;
            success: string[];
            errors: components["schemas"]["UpdateSpendingsError"][];
        };
        UpdateSpendingsError: {
            /** @description порядковый номер события */
            number: number;
            eventId: string;
            error: string;
        };
        SpendingBaseEvent: {
            /** @description уникальный идентификатор события обновления */
            eventId: string;
            /** @enum {string} */
            type: "create" | "update" | "delete";
            /** @description бюджет */
            budgetId: number;
            spendingId: string;
            /**
             * @description новая версия записи
             * @example 039dhafc
             */
            newVersion: string;
        };
        SpendingDeleteEvent: components["schemas"]["SpendingBaseEvent"] & {
            /** @description предыдущая версия записи */
            prevVersion: string;
            /** Format: date-time */
            updatedAt: string;
        } & {
            /**
             * @description discriminator enum property added by openapi-typescript
             * @enum {string}
             */
            type: "delete";
        };
        SpendingUpdateEvent: components["schemas"]["SpendingBaseEvent"] & {
            /** @description предыдущая версия записи */
            prevVersion: string;
            /** Format: date */
            date: string;
            /** Format: uint64 */
            sort: number;
            money: components["schemas"]["Money"];
            description: string;
            /** Format: date-time */
            updatedAt: string;
        } & {
            /**
             * @description discriminator enum property added by openapi-typescript
             * @enum {string}
             */
            type: "update";
        };
        SpendingCreateEvent: components["schemas"]["SpendingBaseEvent"] & {
            /** Format: date */
            date: string;
            /** Format: uint64 */
            sort: number;
            money: components["schemas"]["Money"];
            description: string;
            /** Format: date-time */
            createdAt: string;
            /** Format: date-time */
            updatedAt: string;
        } & {
            /**
             * @description discriminator enum property added by openapi-typescript
             * @enum {string}
             */
            type: "create";
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    getBudgetsWithSpendings: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BudgetsWithSpendingsResponse"];
                };
            };
        };
    };
    updateBudgetSpendings: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["UpdateSpendingsBulkRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UpdateSpendingsErrorsResponse"];
                };
            };
            /** @description errors */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UpdateSpendingsErrorsResponse"];
                };
            };
        };
    };
}
