/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/budgets/spendings': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Получение трат по всем бюджетам
     * @description Получение трат по всем бюджетам
     */
    get: operations['getBudgetsWithSpendings']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/budgets/spendings/bulk': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /**
     * Обновление расходов по бюджету
     * @description Обновление расходов по бюджету
     */
    post: operations['updateBudgetSpendings']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
}
export type webhooks = Record<string, never>
export interface components {
  schemas: {
    Budget: {
      id: number
      /** @description Для отображения внизу под вкладками */
      alias: string
      /** @description полное название бюджета */
      name: string
      money: components['schemas']['Money']
      /** Format: date */
      dateFrom: string
      /** Format: date */
      dateTo: string
    }
    Money: {
      /** Format: int64 */
      amount: number
      fraction: number
      currency: string
    }
    Spending: {
      id: string
      /** Format: date */
      date: string
      /** Format: double */
      sort: number
      money: components['schemas']['Money']
      description: string
      /** Format: date-time */
      createdAt: string
      /** Format: date-time */
      updatedAt: string
      /**
       * @description версионирование изменений записи (во избежания перетирания чужих изменений)
       * @example 039dhafc
       */
      version: string
      /** @description предыдущая версия записи. Указывается только при изменении для того, чтобы записи не перетирали другие изменения. */
      prevVersion?: string
      /** @description принадлежность к бюджету (указывается при изменении) */
      budgetId?: number
    }
    SpendingsByBudget: {
      budgetId: number
      spendings: components['schemas']['Spending'][]
    }
    BudgetsWithSpendingsResponse: {
      budgets: components['schemas']['Budget'][]
      spendings: components['schemas']['SpendingsByBudget'][]
    }
    UpdateSpendingsBulkRequest: {
      updates: components['schemas']['SpendingChange'][]
    }
    UpdateSpendingsErrorsResponse: {
      errors: components['schemas']['UpdateSpendingsError'][]
    }
    UpdateSpendingsError: {
      eventId: string
      error: string
    }
    SpendingChange: {
      /** @description уникальный идентификатор события обновления */
      eventId: string
      /** @enum {string} */
      operation: 'create' | 'update' | 'delete'
      spending: components['schemas']['Spending']
    }
  }
  responses: never
  parameters: never
  requestBodies: never
  headers: never
  pathItems: never
}
export type $defs = Record<string, never>
export interface operations {
  getBudgetsWithSpendings: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['BudgetsWithSpendingsResponse']
        }
      }
    }
  }
  updateBudgetSpendings: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: {
      content: {
        'application/json': components['schemas']['UpdateSpendingsBulkRequest']
      }
    }
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description errors */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['UpdateSpendingsErrorsResponse']
        }
      }
    }
  }
}
