openapi: "3.0.0"
info:
  title: Budget API
  version: 1.0.0
  description: API для записей трат по бюджетам
  contact:
   name: ilya
   email: ilya_dt@proton.me
servers:
  - url: http://localhost:80
    description: local
tags:
 - name: api
paths:
  /budgets/spendings:
    get:
      summary: Получение трат по всем бюджетам
      operationId: getBudgetsWithSpendings
      description: Получение трат по всем бюджетам
      tags: ['api']
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BudgetsWithSpendingsResponse'
  /budgets/spendings/bulk:
    post:
      summary: Обновление расходов по бюджету
      operationId: updateBudgetSpendings
      description: Обновление расходов по бюджету
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSpendingsBulkRequest'
      tags: ['api']
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateSpendingsErrorsResponse'
        '400':
          description: errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateSpendingsErrorsResponse'
components:
  schemas:
    Budget:
     properties:
       id:
         type: integer
       alias:
         type: string
         description: Для отображения внизу под вкладками
       name:
         type: string
         description: полное название бюджета
       sort:
         type: integer
         format: uint64
         description: сортировка бюджетов
       description:
         type: string
         description: описание назначения бюджета, какие-то комментарии
         x-go-type-skip-optional-pointer: true
       money:
        $ref: '#/components/schemas/Money'
       dateFrom:
         type: string
         format: date
       dateTo:
         type: string
         format: date
       params:
         type: string
         description: json формат дополнительных параметров для отображения
     required:
      - id
      - alias
      - name
      - sort
      - money
      - dateFrom
      - dateTo
      - params
    Money:
      properties:
        amount:
          type: integer
          format: int64
        fraction:
          type: integer
        currency:
          type: string
      required:
        - amount
        - fraction
        - currency
    Spending:
      properties:
        id:
          type: string
        date:
          type: string
          format: date
        sort:
          type: number
          format: double
        money:
          $ref: '#/components/schemas/Money'
        description:
          type: string
        createdAt:
           type: string
           format: date-time
        updatedAt:
           type: string
           format: date-time
        version:
           description: версионирование изменений записи (во избежания перетирания чужих изменений)
           type: string
           example: '039dhafc'
      required:
        - id
        - date
        - sort
        - money
        - description
        - createdAt
        - updatedAt
        - version
    SpendingsByBudget:
      properties:
        budgetId:
          type: integer
        spendings:
          type: array
          items:
            $ref: '#/components/schemas/Spending'
      required: ['budgetId', 'spendings']
    BudgetsWithSpendingsResponse:
       properties:
        budgets:
          type: array
          items:
            $ref: '#/components/schemas/Budget'
        spendings:
          type: array
          items:
            $ref: '#/components/schemas/SpendingsByBudget'
       required: ['budgets', 'spendings']
    UpdateSpendingsBulkRequest:
      properties:
        updates:
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/SpendingCreateEvent'
              - $ref: '#/components/schemas/SpendingUpdateEvent'
              - $ref: '#/components/schemas/SpendingDeleteEvent'
      required: ['updates']
    UpdateSpendingsErrorsResponse:
      properties:
        success:
          type: array
          items:
            type: string
            description: id события
        errors:
          type: array
          items:
            $ref: '#/components/schemas/UpdateSpendingsError'
      required: ['success', 'errors']
    UpdateSpendingsError:
      properties:
        eventId:
          type: string
        error:
          type: string
      required: ['eventId', 'error']
    SpendingBaseEvent:
      properties:
        eventId:
          type: string
          description: уникальный идентификатор события обновления
        type:
          type: string
          enum:
            - create
            - update
            - delete
        spendingId:
          type: string
        prevVersion:
          description: предыдущая версия записи. Пустая, если запись создается
          type: string
        newVersion:
           description: новая версия записи
           type: string
           example: '039dhafc'
        budgetId:
           description: бюджет
           type: integer
      required:
        - eventId
        - type
        - spendingId
        - prevVersion
        - newVersion
        - budgetId
    SpendingDeleteEvent:
      allOf:
        - $ref: '#/components/schemas/SpendingBaseEvent'
        - properties:
            updatedAt:
              type: string
              format: date-time
          required:
            - updatedAt
    SpendingUpdateEvent:
      allOf:
        - $ref: '#/components/schemas/SpendingBaseEvent'
        - properties:
            date:
              type: string
              format: date
            sort:
              type: number
              format: double
            money:
              $ref: '#/components/schemas/Money'
            description:
              type: string
            updatedAt:
                type: string
                format: date-time
          required:
            - date
            - sort
            - money
            - description
            - updatedAt

    SpendingCreateEvent:
      allOf:
        - $ref: '#/components/schemas/SpendingBaseEvent'
        - properties:
            date:
              type: string
              format: date
            sort:
              type: number
              format: double
            money:
              $ref: '#/components/schemas/Money'
            description:
              type: string
            createdAt:
                type: string
                format: date-time
            updatedAt:
                type: string
                format: date-time
          required:
            - operation
            - date
            - sort
            - money
            - description
            - createdAt
            - updatedAt
